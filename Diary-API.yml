openapi: 3.0.0
info:
  title: Diary API
  version: 1.0.0
paths:
  /register/:
    post:
      tags:
        - "Auth"
      description: "Регистрация нового пользователя"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: Имя пользователя
                password:
                  type: string
                  description: Пароль
                email:
                  type: string
                  description: E-mail

      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /login/:
    post:
      tags:
        - "Auth"
      description: "Вход пользователя"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: Имя пользователя
                password:
                  type: string
                  description: Пароль
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"

  /logout/:
    post:
      tags:
        - "Auth"
      security:
        - BearerAuth: []
      description: "Выход пользователя"
      responses:
        "204":
          description: "Logged out"
        

  # Diary CRUD
  /diary:
    post:
      tags:
        - Diary
      summary: Create a new diary
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the diary

      responses:
        201:
          description: The newly created diary
          content:
            application/json:
               schema:
                $ref: "#/components/schemas/Diary"

    get:
      summary: Retrieve a list of diaries
      tags:
        - Diary
      responses:
        200:
          description: A list of diaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Diary"
  /diary/{diaryId}:
    put:
      summary: Update an existing diary
      tags:
        - Diary
      parameters:
        - name: diaryId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: "#/components/schemas/Diary"

      responses:
        200:
          description: The updated diary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Diary"
                
    delete:
      summary: Delete an existing diary
      tags:
        - Diary
      parameters:
        - name: diaryId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: The diary has been deleted

  # Diary page CRUD
  /diary/{diaryId}/page:
    post:
      summary: Create a new page in a diary
      tags:
        - Diary Pages
      parameters:
        - name: diaryId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The title of the page
                  body:
                    type: string
                    description: The content of the page
          
      responses:
        201:
          description: The newly created page
          content:
            application/json:
               schema:
                $ref: "#/components/schemas/DiaryPage"

    get:
      summary: Retrieve a list of pages in a diary
      tags:
        - Diary Pages
      parameters:
        - name: diaryId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A list of pages in a diary
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Diary"

    put:
      summary: Update an existing page in a diary
      tags:
        - Diary Pages
      parameters:
        - name: diaryId
          in: path
          required: true
          schema:
            type: string
        - name: pageId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                  description: The new title of the page
                body:
                  type: string
                  description: The new content of the page
      responses:
        200:
          description: The updated page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiaryPage"

    delete:
      summary: Delete an existing page in a diary
      tags:
        - Diary Pages
      parameters:
        - name: diaryId
          in: path
          required: true
          schema:
            type: string
        - name: pageId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: The page has been deleted

      
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  parameters:

    user_id:
      in: path
      name: user_id
      required: true
      schema:
        type: string
        format: uuid
      description: User ID

  schemas:

    Token:
      type: object
      properties:
        access_token:
          type: string
          description: Токен доступа

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        login:
          type: string
        email:
          type: string
          format: email
        password:
          type: string

    Diary: 
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    DiaryPage: 
      type: object
      properties:
        id: 
          type: integer
        name: 
          type: string
        body:
          type: string
          format: text